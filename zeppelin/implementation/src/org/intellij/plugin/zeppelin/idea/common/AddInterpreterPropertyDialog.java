package org.intellij.plugin.zeppelin.idea.common;

import com.intellij.openapi.ui.DialogWrapper;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import org.intellij.plugin.zeppelin.models.InterpreterProperty;
import org.intellij.plugin.zeppelin.models.InterpreterPropertyType;
import org.jetbrains.annotations.Nullable;

import javax.swing.*;
import java.awt.*;
import java.util.Arrays;

public class AddInterpreterPropertyDialog extends DialogWrapper {
    private JPanel contentPane;
    private JTextField nameField;
    private JLabel labelField;
    private JComboBox<String> typeField;
    private JTextField valueField;
    private String labelTitle;

    public AddInterpreterPropertyDialog(JComponent parent) {
        super(parent, false);
        labelTitle = "Value";
        $$$setupUI$$$();
        init();

        String[] array = Arrays.stream(InterpreterPropertyType.values()).map(InterpreterPropertyType::getValue).toArray(String[]::new);
        final DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>(array);
        typeField.setModel(model);
        setTitle("Add a Interpreter Property");
    }

    @Nullable
    @Override
    protected JComponent createCenterPanel() {
        return contentPane;
    }

    public InterpreterProperty getValue() {
        if (showAndGet()) {
            return new InterpreterProperty(
                    nameField.getText(),
                    valueField.getText(),
                    InterpreterPropertyType.valueOf(
                            String.valueOf(typeField.getSelectedItem()).toUpperCase()
                    ));
        } else {
            return null;
        }
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        contentPane = new JPanel();
        contentPane.setLayout(new GridLayoutManager(1, 2, new Insets(10, 10, 10, 10), -1, -1));
        nameField = new JTextField();
        contentPane.add(nameField, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(1000, -1), null, 0, false));
        contentPane.add(labelField, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }

    private void createUIComponents() {
        labelField = new JLabel(labelTitle);
    }
}